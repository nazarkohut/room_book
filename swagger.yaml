---
openapi: 3.0.0
info:
  title: room_book
  description: Webapp which help people with room reservation and analyzing advantages of one hotel among another.
  version: "1.0"
servers:
- url: https://virtserver.swaggerhub.com/Speedruners/room_book/1.0
  description: SwaggerHub API Auto Mocking
paths:
  /room_book:
    get:
      summary: Home page
      description: Returns list of all available cities and properties
      responses:
        "200":
          description: Cities with related fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/city'
  /room_book/{city_id}/hotels:
    get:
      summary: Particular city
      description: Returns all hotels located in particular city
      parameters:
      - name: city_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Hotels with related fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hotel'
        "404":
          description: Not Found
  /room_book/{city_id}/famous_places:
    get:
      summary: Famous places for particular city
      description: All famous places located in particular city
      parameters:
      - name: city_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Famous places with related fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/famous_place'
        "404":
          description: Not Found
  /room_book/{hotel_id}/apartments:
    get:
      summary: Apartments for particular hotel
      parameters:
      - name: hotel_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Apartments for particular hotel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apartment'
        "404":
          description: Not Found
  /room_book/apartment/{apartment_id}:
    get:
      summary: Particular apartment
      parameters:
      - name: apartment_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Particular apartment info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/particular_apartment'
        "404":
          description: Not Found
  /room_book/apartment/{apartment_id}/show_reserve/:
    get:
      summary: Available reserve dates
      parameters:
      - name: apartment_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Cost of reserve and available dates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reserve'
        "404":
          description: Not Found
  /room_book/apartment/{apartment_id}/reserve/:
    post:
      summary: Reserve apartment
      parameters:
      - name: apartment_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: User will pass reserve dates and then he'll be redirected to payment (apartment will be not booked until user complete his payment)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apartment_id_reserve_body'
        required: true
      responses:
        "202":
          description: Reserved
        "404":
          description: Not Found
        "401":
          description: Unauthorized
  /room_book/register:
    post:
      summary: Add new user to database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/room_book_register_body'
      responses:
        "201":
          description: Created
        "400":
          description: User already exist
  /room_book/login:
    post:
      summary: Sign in
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/room_book_login_body'
      responses:
        "400":
          description: Username or password didn't match
        "403":
          description: You can't change profile that is not yours
        "200":
          description: Ok
  /room_book/profile/{user_id}:
    get:
      summary: Return user information
      parameters:
      - name: user_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "404":
          description: Not Found
  /room_book/change_password/{user_id}:
    put:
      summary: Change user password
      parameters:
      - name: user_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Password was successfully changed
        "400":
          description: Old password is incorrect
        "404":
          description: Not Found
components:
  schemas:
    city:
      type: object
      properties:
        city_id:
          type: integer
        city:
          type: string
        country:
          type: string
        population:
          type: integer
        min_cost:
          type: integer
        number_of_properties:
          type: integer
      example:
      - city_id: 1
        city: Kyiv
        country: Ukraine
        population: 7 000 000
        min_cost: 100
        number_of_properties: 20 000
      - city_id: 2
        city: Lviv
        country: Ukraine
        population: 3 000 000
        min_cost: 200
        number_of_properties: 10 000
    famous_place:
      type: object
      properties:
        city_id:
          type: integer
        famous_place_id:
          type: integer
        famous_place:
          type: string
        famous_place_image:
          type: string
        entrance_fee:
          type: integer
          example: 100
      example:
      - city_id: 1
        famous_place_id: 1
        famous_place_image: http://cloudinary/
        famous_place: Kyiv-Pechersk Lavra
        entrance_fee: 0
      - city_id: 1
        famous_place_id: 1
        famous_place_image: http://cloudinary/
        famous_place: Motherland Monument
        entrance_fee: 25
    hotel:
      type: object
      properties:
        hotel_id:
          type: integer
        city_id:
          type: integer
        hotel:
          type: string
        stars:
          type: integer
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        image:
          type: string
        description:
          type: string
        location_on_map:
          type: string
        breakfast_included:
          type: integer
          description: '{0:not included, 1:included (apartment cost cover breakfast), 2:hotel provides breakfasts but you have to pay for it, 3:all inclusive }'
          enum:
          - 0
          - 1
          - 2
          - 3
        transport_from_airport:
          type: integer
          description: '{0:not included, 1:bus, 2:car}'
          enum:
          - 0
          - 1
          - 2
        reviews:
          $ref: '#/components/schemas/hotel_reviews'
      example:
      - hotel_id: 1
        hotel: BigHotel
        city_id: 1
        stars: 5
        image: http://cloudinary/
        description: <brief hotel description>
        location_on_map: http://googlemaps/
        breakfast_included: 1
        transport_from_airport: 2
        reviews:
          review_id: 1
          hotel_id: 1
          user_id: 2
          review: There are no conditioner
          mark: 4
          published: <YYYY-MM-DDTHH:mm:ss. sss>
      - hotel_id: 2
        hotel: HugeHotel
        city_id: 2
        stars: 5
        image: http://cloudinary/
        description: <brief hotel description>
        location_on_map: http://googlemaps/
        breakfast_included: 3
        transport_from_airport: 1
        reviews:
          review_id: 2
          hotel_id: 1
          user_id: 1
          review: <review>
          mark: 5
          published: <YYYY-MM-DDTHH:mm:ss. sss>
    apartment:
      type: object
      properties:
        apartment_id:
          type: integer
        hotel_id:
          type: integer
        image:
          type: string
        room_capacity:
          type: integer
        cost:
          type: integer
      example:
      - apartment_id: 1
        hotel_id: 1
        image: http://cloudinary/
        room_capacity: 2
        cost: 250
      - apartment_id: 2
        hotel_id: 1
        image: http://cloudinary/
        room_capacity: 3
        cost: 300
    particular_apartment:
      type: object
      properties:
        apartment_id:
          type: integer
        hotel_id:
          type: integer
        image:
          type: string
        is_available:
          type: boolean
        room_capacity:
          type: integer
        floor:
          type: integer
        cost:
          type: integer
        description:
          type: string
        apartment_image:
          $ref: '#/components/schemas/particular_apartment_apartment_image'
      example:
      - apartment_id: 2
        hotel_id: 1
        image: http://cloudinary/
        is_available: 1
        room_capacity: 3
        floor: 1
        cost: 300
        description: <room description>
        apartment_image:
        - image_id: 1
          apartment_id: 2
          image_url: http://cloudinary/
        - image_id: 2
          apartment_id: 2
          image_url: http://cloudinary/
    reserve:
      type: object
      properties:
        reserve_id:
          type: integer
        apartment_id:
          type: integer
        user_id:
          type: integer
        reserve_date_start:
          type: string
          format: date
        reserve_date_finish:
          type: string
          format: date
      example:
      - reserve_id: 1
        apartment_id: 1
        user_id: 1
        reserve_date_start: 2021-09-25
        reserve_date_finish: 2021-10-25
      - reserve_id: 1
        apartment_id: 1
        user_id: 2
        reserve_date_start: 2021-10-25
        reserve_date_finish: 2021-10-27
    user:
      type: object
      properties:
        user_id:
          type: integer
          example: 1
        email:
          type: string
          example: John_Doe@example.com
        username:
          type: string
          example: johndoe
        password:
          type: string
          readOnly: true
          example: <hashed_password>
        birthday:
          type: string
          format: date
          example: 2003-06-02
        is_bot:
          type: boolean
          example: false
        permission:
          type: integer
          description: '{1:superuser, 2:customer, 3:hotel owner}'
          enum:
          - 1
          - 2
          - 3
    apartment_id_reserve_body:
      properties:
        reserve_date_start:
          type: string
          format: date
          example: 2021-07-21
        reserve_date_finish:
          type: string
          format: date
          example: 2021-08-22
    room_book_register_body:
      properties:
        email:
          example: John_Doe@example.com
        username:
          example: johndoe
        password:
          example: <password>
        birthday:
          example: 2003-06-02
        permission:
          type: number
          description: Here user choose whom to be {2:customer, 3:hotel owner}
          example: 2
          enum:
          - 2
          - 3
    room_book_login_body:
      properties:
        username:
          example: johndoe
        password:
          example: <password>
    inline_response_200:
      properties:
        profile_image:
          type: string
          format: url
          example: http://cloudinary/
        email:
          type: string
          example: John_Doe@example.com
        username:
          type: string
          example: johndoe
        birthday:
          type: string
          format: date
          example: 2003-06-02
        location:
          type: string
          format: url
          example: http://googlemaps/
    hotel_reviews:
      type: object
      properties:
        review_id:
          type: integer
        hotel_id:
          type: integer
        user_id:
          type: integer
        review:
          type: string
        mark:
          type: integer
          description: Value from 1 to 5 as integer
        published:
          type: string
          format: date
    particular_apartment_apartment_image:
      type: object
      properties:
        image_id:
          type: integer
        apartment_id:
          type: string
        image_url:
          type: string
